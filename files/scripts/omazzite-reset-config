#!/bin/bash

# This script allows a user to reset their Omazzite personal configuration files
# by copying them from the /etc/skel directory to their home directory.
# It also creates a backup of existing configuration files before overwriting.

set -oue pipefail

SKEL_DIR="/etc/skel"
HOME_DIR="$HOME"
BACKUP_DIR="$HOME/.config_backup_$(date +%Y%m%d%H%M%S)"

echo "WARNING: This script will reset your Omazzite configuration files to their default Omadora state."
echo "         Existing configuration files will be backed up, but will be overwritten."
echo "         Proceed with caution!"
echo ""

read -p "Do you want to continue with the Omazzite configuration reset? (Y/n): " confirm
if [[ ! "$confirm" =~ ^[yY]$ ]] && [[ ! -z "$confirm" ]]; then
    echo "Configuration reset cancelled."
    exit 0
fi

if [ ! -d "$SKEL_DIR" ]; then
    echo "Error: Default configuration directory $SKEL_DIR not found."
    echo "This script is intended for systems where Omazzite defaults are installed."
    exit 1
fi

echo "Creating backup of existing configuration files in $BACKUP_DIR..."
mkdir -p "$BACKUP_DIR"

# Initialize CONFIG_PATHS associative array
declare -A CONFIG_PATHS

# Function to populate CONFIG_PATHS with static mappings
populate_static_mappings() {
    CONFIG_PATHS[".bashrc"]="$SKEL_DIR/.local/share/omadora/default/bashrc"
    CONFIG_PATHS[".XCompose"]="$SKEL_DIR/.local/share/omadora/default/xcompose"
    CONFIG_PATHS[".local/share/applications/icons"]="$SKEL_DIR/.local/share/omadora/applications/icons"
    CONFIG_PATHS[".local/share/omadora"]="$SKEL_DIR/.local/share/omadora"
    CONFIG_PATHS[".local/share/fonts"]="$SKEL_DIR/.local/share/omadora/config/fonts"
}

# Function to dynamically discover and add config directories from omadora/config
discover_config_dirs() {
    local omadora_config_dir="$SKEL_DIR/.local/share/omadora/config"
    
    if [ ! -d "$omadora_config_dir" ]; then
        echo "Warning: Omadora config directory '$omadora_config_dir' not found. Skipping dynamic discovery."
        return
    fi
    
    # Find all directories within omadora/config and add them to CONFIG_PATHS
    find "$omadora_config_dir" -mindepth 1 -maxdepth 1 -type d | while read -r dir; do
        local dirname=$(basename "$dir")
        local dest_path=".config/$dirname"
        local source_path="$dir"
        
        # Skip if already statically mapped (though unlikely in this case)
        if [[ -z "${CONFIG_PATHS[$dest_path]+isset}" ]]; then
            CONFIG_PATHS["$dest_path"]="$source_path"
        fi
    done
}

# Populate the mappings
populate_static_mappings
discover_config_dirs

echo ""
echo "The following configuration items will be reset:"
for item in "${!CONFIG_PATHS[@]}"; do
    echo "  - $item"
done
echo ""

for item in "${!CONFIG_PATHS[@]}"; do
    SOURCE="${CONFIG_PATHS[$item]}"
    DEST="$HOME_DIR/$item"
    
    if [ -e "$SOURCE" ] || [ -d "$SOURCE" ]; then
        read -p "Reset '$item'? (Y/n): " reset_confirm
        if [[ "$reset_confirm" =~ ^[yY]$ ]] || [[ -z "$reset_confirm" ]]; then
            if [ -e "$DEST" ] || [ -d "$DEST" ]; then
                echo "Backing up $DEST to $BACKUP_DIR/$(basename "$item")_backup"
                cp -Lr "$DEST" "$BACKUP_DIR/$(basename "$item")_backup"
                rm -rf "$DEST"
            fi
            echo "Copying $SOURCE to "$DEST""
            mkdir -p "$(dirname "$DEST")" # Ensure parent directory exists
            cp -Lr "$SOURCE" "$DEST"
        else
            echo "Skipping reset for '$item'."
        fi
    else
        echo "Warning: Source item $SOURCE does not exist in $SKEL_DIR. Skipping."
    fi
done

echo ""
echo "Omazzite configuration reset complete. A backup of your previous configuration is available at $BACKUP_DIR."
echo "For changes to take full effect, it is highly recommended to perform a full system reboot, or at least restart your desktop environment (e.g., Hyprland) and any relevant applications."
echo "For Hyprland, you might need to run 'hyprctl reload' or log out and log back in."